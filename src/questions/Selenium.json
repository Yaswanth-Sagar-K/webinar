{
  "testName": "Selenium",
  "duration": "30 mins",
  "numberOfQuestions": 30,
  "topicsCovered": [
    "Selenium"
  ],
  "questions": [
    {
      "id": 1,
      "question": "What is Selenium WebDriver primarily used for?",
      "options": [
        "Automating unit testing of backend services",
        "Automating database operations",
        "Automating web browser interactions for testing",
        "Writing front-end UI frameworks"
      ],
      "answer": "Automating web browser interactions for testing"
    },
    {
      "id": 2,
      "question": "Which language is not officially supported by Selenium WebDriver?",
      "options": [
        "Java",
        "Python",
        "C#",
        "PHP"
      ],
      "answer": "PHP"
    },
    {
      "id": 3,
      "question": "What is the main difference between Selenium RC and Selenium WebDriver?",
      "options": [
        "RC runs on mobile, WebDriver doesn't",
        "RC requires a server, WebDriver interacts directly with browsers",
        "RC is faster than WebDriver",
        "WebDriver supports fewer browsers than RC"
      ],
      "answer": "RC requires a server, WebDriver interacts directly with browsers"
    },
    {
      "id": 4,
      "question": "You want to select an element with the ID login-button. Which WebDriver code is correct in Python?",
      "options": [
        "driver.find_element_by_class(\"login-button\")",
        "driver.get_element(\"login-button\")",
        "driver.find_element(By.ID, \"login-button\")",
        "driver.find_element(By.NAME, \"login-button\")"
      ],
      "answer": "driver.find_element(By.ID, \"login-button\")"
    },
    {
      "id": 5,
      "question": "Your test clicks a button, but the next page takes time to load. Which Selenium feature helps you wait for the next element reliably?",
      "options": [
        "sleep()",
        "waitUntilClickable()",
        "Implicit Wait or Explicit Wait",
        "get_element_by_delay()"
      ],
      "answer": "Implicit Wait or Explicit Wait"
    },
    {
      "id": 6,
      "question": "A form's submit button has no ID or class, but has the text \"Submit\". What's a good strategy to locate it?",
      "options": [
        "Use find_element_by_tag_name(\"button\")",
        "Use XPath with text: //button[text()='Submit']",
        "Use CSS selector with text",
        "Use its background color in selector"
      ],
      "answer": "Use XPath with text: //button[text()='Submit']"
    },
    {
      "id": 7,
      "question": "What is the purpose of the findElement() method in Selenium WebDriver?",
      "options": [
        "To click on a web element",
        "To locate and return a single web element",
        "To scroll the page",
        "To capture screenshots"
      ],
      "answer": "To locate and return a single web element"
    },
    {
      "id": 8,
      "question": "What is the use of driver.quit() in Selenium?",
      "options": [
        "To close the browser tab",
        "To terminate only the active WebDriver session",
        "To close all browser windows and end the WebDriver session",
        "To stop the test execution temporarily"
      ],
      "answer": "To close all browser windows and end the WebDriver session"
    },
    {
      "id": 9,
      "question": "Which of the following is used to run tests on multiple machines in parallel in Selenium?",
      "options": [
        "Selenium RC",
        "Selenium WebDriver",
        "Selenium Grid",
        "Selenium IDE"
      ],
      "answer": "Selenium Grid"
    },
    {
      "id": 10,
      "question": "You need to click a button with the ID submitBtn. Which code correctly performs this in Java with Selenium WebDriver?",
      "options": [
        "driver.findElement(By.id(\"submitBtn\")).press();",
        "driver.locate(\"submitBtn\").click();",
        "driver.findElement(By.name(\"submitBtn\")).click();",
        "driver.findElement(By.id(\"submitBtn\")).click();"
      ],
      "answer": "driver.findElement(By.id(\"submitBtn\")).click();"
    },
    {
      "id": 11,
      "question": "You want to wait for an element to appear before interacting with it. Which type of wait should you use for dynamic content?",
      "options": [
        "Implicit Wait",
        "Thread.sleep()",
        "Explicit Wait",
        "Static Wait"
      ],
      "answer": "Explicit Wait"
    },
    {
      "id": 12,
      "question": "You want to test your website in multiple browsers (Chrome, Firefox, Edge). Which approach is correct?",
      "options": [
        "Use Thread.sleep()",
        "Instantiate the specific WebDriver (e.g., new ChromeDriver(), new FirefoxDriver())",
        "Use driver.setBrowser(\"firefox\")",
        "Set browser in the HTML test case"
      ],
      "answer": "Instantiate the specific WebDriver (e.g., new ChromeDriver(), new FirefoxDriver())"
    },
    {
      "id": 13,
      "question": "Your test needs to select an option from a dropdown. What Selenium class should you use?",
      "options": [
        "DropdownHandler",
        "Select",
        "OptionSelector",
        "WebElementSelector"
      ],
      "answer": "Select"
    },
    {
      "id": 14,
      "question": "A web element is inside an iframe. What must you do before interacting with it?",
      "options": [
        "Scroll to the element",
        "Switch to the iframe using driver.switchTo().frame()",
        "Maximize the browser",
        "Click on the iframe"
      ],
      "answer": "Switch to the iframe using driver.switchTo().frame()"
    },
    {
      "id": 15,
      "question": "You want to take a screenshot when a test fails. Which WebDriver interface should you use?",
      "options": [
        "Screenshot",
        "TakesScreenshot",
        "ImageCapture",
        "SnapshotDriver"
      ],
      "answer": "TakesScreenshot"
    },
    {
      "id": 16,
      "question": "What is the difference between driver.close() and driver.quit() in Selenium WebDriver?",
      "options": [
        "Both close all browser windows",
        "close() ends the session, quit() does not",
        "close() closes the current window; quit() closes all windows and ends the session",
        "quit() closes only the active tab"
      ],
      "answer": "close() closes the current window; quit() closes all windows and ends the session"
    },
    {
      "id": 17,
      "question": "Which of the following waits in Selenium WebDriver is NOT deprecated and is recommended for dynamic content handling?",
      "options": [
        "Implicit Wait",
        "Thread.sleep()",
        "FluentWait",
        "PageLoadTimeout"
      ],
      "answer": "FluentWait"
    },
    {
      "id": 18,
      "question": "What is the purpose of using the ExpectedConditions class in Selenium?",
      "options": [
        "To set browser preferences",
        "To provide conditions for explicit waits",
        "To maximize the browser window",
        "To handle file downloads"
      ],
      "answer": "To provide conditions for explicit waits"
    },
    {
      "id": 19,
      "question": "In Selenium Grid, what does a node represent?",
      "options": [
        "A configuration file",
        "A test script",
        "A remote machine where browser instances run",
        "The hub server"
      ],
      "answer": "A remote machine where browser instances run"
    },
    {
      "id": 20,
      "question": "Why is XPath considered more powerful than CSS selectors in Selenium?",
      "options": [
        "Because XPath is faster",
        "XPath can traverse both up and down the DOM",
        "XPath is easier to read",
        "CSS supports attribute-based selection while XPath does not"
      ],
      "answer": "XPath can traverse both up and down the DOM"
    },
    {
      "id": 21,
      "question": "What is the primary function of the Actions class in Selenium?",
      "options": [
        "Manage cookies",
        "Take screenshots",
        "Handle keyboard and mouse interactions like drag-and-drop",
        "Access browser history"
      ],
      "answer": "Handle keyboard and mouse interactions like drag-and-drop"
    },
    {
      "id": 22,
      "question": "You're testing a React-based application where elements take time to load. Which wait strategy is most reliable?",
      "options": [
        "driver.implicitlyWait(10)",
        "Thread.sleep(5000)",
        "WebDriverWait with ExpectedConditions.presenceOfElementLocated()",
        "driver.setTimeout()"
      ],
      "answer": "WebDriverWait with ExpectedConditions.presenceOfElementLocated()"
    },
    {
      "id": 23,
      "question": "You need to handle a dropdown where options are dynamically loaded via AJAX. What is the best approach?",
      "options": [
        "Use Select class directly",
        "Use driver.findElement().click() only",
        "Wait explicitly for the dropdown options to be visible",
        "Use CSS selectors to bypass the AJAX delay"
      ],
      "answer": "Wait explicitly for the dropdown options to be visible"
    },
    {
      "id": 24,
      "question": "Your test intermittently fails with NoSuchElementException. What is a likely solution?",
      "options": [
        "Use driver.quit() before every test",
        "Increase the system's memory",
        "Use explicit wait until the element appears",
        "Use driver.navigate().refresh()"
      ],
      "answer": "Use explicit wait until the element appears"
    },
    {
  "id": 25,
  "question": "You are testing file upload functionality. How can you upload a file using Selenium WebDriver?",
  "options": [
    "Use driver.sendKeys() on a div element",
    "Drag-and-drop the file using the Actions class",
    "Use sendKeys() to input the file path into &lt;input type=\"file\"&gt;",
    "Use Robot class only"
  ],
  "answer": "Use sendKeys() to input the file path into &lt;input type=\"file\"&gt;"
},
    {
      "id": 26,
      "question": "You're automating a test for a confirmation alert. What method should you use to click 'OK'?",
      "options": [
        "driver.closeAlert()",
        "driver.handleAlert()",
        "driver.switchTo().alert().accept()",
        "driver.switchTo().frame().accept()"
      ],
      "answer": "driver.switchTo().alert().accept()"
    },
    {
      "id": 27,
      "question": "While running tests in Selenium Grid, your tests run but the browser is not visibly opening on the node. What's the likely reason?",
      "options": [
        "Browser is outdated",
        "Node is incorrectly registered",
        "Node is running in headless mode",
        "Hub is disconnected"
      ],
      "answer": "Node is running in headless mode"
    },
    {
      "id": 28,
      "question": "Which method is used to navigate back to the previous page in Selenium WebDriver?",
      "options": [
        "driver.forward()",
        "driver.back()",
        "driver.navigate().back()",
        "driver.previous()"
      ],
      "answer": "driver.navigate().back()"
    },
    {
      "id": 29,
      "question": "How do you handle a hidden element in Selenium WebDriver?",
      "options": [
        "Use JavaScript to modify its visibility",
        "Use driver.hide()",
        "Ignore hidden elements",
        "Only CSS selectors can locate hidden elements"
      ],
      "answer": "Use JavaScript to modify its visibility"
    },
    {
      "id": 30,
      "question": "What is the correct way to maximize the browser window in Selenium WebDriver?",
      "options": [
        "driver.maximize()",
        "driver.manage().window().maximize()",
        "driver.window().fullscreen()",
        "driver.setWindowSize(MAX)"
      ],
      "answer": "driver.manage().window().maximize()"
    }
  ]
}